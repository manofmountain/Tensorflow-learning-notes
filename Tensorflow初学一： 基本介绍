Tensorflow初学一： 基本介绍

深度学习是门浩大的工程，想要从头自己实现自数据集处理、模型构建、模型版本维护到模型训练及部署等全部工作需要相当大的精力投入。因此最理想的选择是寻求某一较为成熟的开源框架，在其已经得到良好测试的API之上进行相对较高封装度的开发。在这些开源的学习框架当中，目前风头最紧的非Tensorflow莫属。跟传统的其它深度学习框架如Caffe、Theano等相比，它具有更丰富的文档支持，同时它的示例代码结构清晰，诚为深度学习初学者入门、探路深度学习的最佳选择之一。笔者在过去的一年里翻过两遍左右的Tensorflow的在线文档，同时也在自己的HP Desktop上几乎实验过它所有的在线实例代码。在2017年5月份的春天，决定抽周末的时间整理出自己的一份Tensorflow学习笔记来，跟同道一块做些自己的心得体会分享，希望写者与读者能够一起进步。

想要用Tensorflow来进行深度学习程序开发，需要具备最基本的三项相关知识技能：
1）、了解至少一种编程语言（现在它支持C++/Java/Python/Go等），最好是Python，它目前已经被广大码友称为是进行机器学习研究或者更广泛的数据分析的最佳编程利器。Python的最大好处之一在于拥有着众多灵活好用的、进行数值计算或数据统计分析的开源库或包像Numpy, Scipy, Panda等等；它们使得我们能够以非常便捷的方式处理复杂数学计算，而这正是机器学习等相关应用程序开发所需要的；
2）、了解基本的高等数学知识像数组、矩阵运算为代表的线性代数，微积分与概率统计等，这些都是大学本科期间的基础课程。由此可见数学基础还是挺重要的啊，能够对这些高等数学知识有个良好掌握可以使我们能快速理解、学习并掌握当今最新的深度学习理论进展（一般通过读一些相关领域论文），并快速地在理解的基础之上将它们应用于我们的生产实际当中；
3）、懂些机器学习的基本概念；本质上深度学习是机器学习的一个子集，它只是一种应用了多层神经网络模型来进行分类学习的监督学习而已。如果你曾获得过模式识别的硕士学位，那么从事机器学习的相关研究将会非常驾轻就熟，不然则需要去了解些基本的机器学习概念像何为监督学习、何为非监督学习、何为分类、何为聚类等等知识。不过如果你具备我前面提到的两点技能，相信你花时间翻看下任何一部机器学习专著的概论章节，都能获得此类相关的基本知识介绍，然后则可以在学习开源框架示例代码的过程中，通过多做实验，多进行相关实践来对相关领域知识取得更好的领悟。

1. Tensorflow所提供的APIs：
学习任何一个框架，我们最关心的、直接与之打交道的就是它所提供的一些APIs。它包含着与我们应用程序进行交互的所有内容。Tensorflow所提供的APIs可分为两类：（1）Low level APIs，又称为Tensorflow core。它提供了最完整、最细节的机器学习底层构建，利用这些core APIs我们可以构建自己的模型，控制模型训练的一些可选策略以及对模型训练过程中的一些可调参量进行选择监控；（2）High level APIs，这些APIs基于Low level APIs来实现，在low level APIs之上进行了更高一层的抽象封装。由于抽象程度更高，它们有着更友好的用户功能支持。我们可以直接使用这些APIs所提供的模型来表达我们实际生产应用中所要解决的问题，简单说，利用它们可以快速地进行应用程序的原型开发。目前tensorflow 的High level APIs还在不断更新、开发当中，新的模型一直在持续加入，同时旧的模型的版本也一直在不断迭代、更新中，在学习具体实例代码的时候一定要清楚了解它所对应的Tensorflow整体框架版本。那么如何来选择使用这两种类型的APIs呢？一般来说，如果我们的应用程序所要解决的问题能够使用High level APIs得到良好解决，那么直接使用这些封装好的高度抽象APIs无疑可以大大缩短我们的开发周期，快速实现出应用程序的基本可用原型，这非常符合《从小工到专家》一书中提到的‘曳光弹‘式开发精神。但如果我们的应用需求场景无法在可选的High level APIs所构建的已有模型中得到满足或者已有的模型虽可差强满足需求但其性能不够好，那么就需要我们使用low level的core APIs构建出自己想要的模型出来。
